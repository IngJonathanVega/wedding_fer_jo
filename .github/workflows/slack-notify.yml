name: Slack Notification

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

env:
  PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }} 
  PULL_REQUEST_URL: ${{ github.event.pull_request.html_url }}
  PULL_REQUEST_AUTHOR: ${{ github.event.pull_request.user.login }}
  PULL_REQUEST_EVENT_NAME: ${{ github.event_name }}
  PULL_REQUEST_LOGS_URL: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}
  PULL_REQUEST_COMMIT_URL: ${{ github.event.pull_request.head.repo.html_url }}/commit/${{ github.event.pull_request.head.sha }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
      - name: Slack message with build result
        if: success() || failure()
        uses: slackapi/slack-github-action@v1.24.0
        env:
          PULL_REQUEST_JOB_STATUS: ${{ job.status }}
          PULL_REQUEST_JOB_STATUS_COLOR: ${{ job.status == 'success' && vars.COLOR_GREEN || job.status == 'failure' && vars.COLOR_RED || vars.COLOR_ORANGE }}
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "${{ env.PULL_REQUEST_JOB_STATUS_COLOR }}",
                  "fallback": "test",
                  "blocks": [
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Pull Request:*\n<${{ env.PULL_REQUEST_URL }}|${{ env.PULL_REQUEST_TITLE }}>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Status:*\n`${{ env.PULL_REQUEST_JOB_STATUS }}`"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Author:*\n`${{ env.PULL_REQUEST_AUTHOR }}`"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Event:*\n`${{ env.PULL_REQUEST_EVENT_NAME }}`"
                        }
                      ]
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "Logs"
                          },
                          "url": "${{ env.PULL_REQUEST_LOGS_URL }}"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "Commit"
                          },
                          "url": "${{ env.PULL_REQUEST_COMMIT_URL }}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
